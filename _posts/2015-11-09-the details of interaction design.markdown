---
layout: article
title: "交互设计常见细节"
summary: 交互设计由许多细小的细节组成的，深思熟虑地设计这些变化，就能为用户创造优美的体验。
date: 2015-11-09 13:46:52
categories: blog
promote: images/07blog1.jpg
icon: images/07blog-icon.jpg
summary2: 在工作中发现了状态设计是交互设计必不可少的要素。越来越多的状态可能不会一下子想起来，记录下来为检查自己的交互稿提供参考。

---
<br><br>


{% assign maintitle = '状态' %}
{% include article_maintitle.html%}

* <span class="article_subtitle">默认状态</span> <br>
主要是默认（初始化）显示的数据、文字、选项等。任何一个页面、表单、按钮、文本域等都会有默认状态，这是需要我们注明的，否则研发人员难以准确单纯的从原型上判断出元素背后的逻辑。 <br />

1.初始状态<br>
一个组件做任何事情之前是怎样的？这个状态蛮重要的，是用户首次看到它的样子。<br />



* <span class="article_subtitle">常见状态</span> <br>

1.未登录状态<br>
这是一个常见却容易忽略的状态。未登录状态可能会和初始状态一致，但是有一些需要显示用户信息的地方就要特殊显示了。<br />

2.加载中<br>
理想状况下，没人会看到这个。有许多方法能使加载状态微妙而含蓄，这个时候提高用户心理预期是很有必要的。<br />

3.空状态<br>
在没有数据时的展现，此时要做的是引导用户去产生数据。<br />

4.单一项目<br>
开始有些数据了。在输入界面中，这或许是按下第一个键的状态。在列表中，可能是只有一项（或仅剩一项）时的状态。<br />

5.有一些数据<br>
优先考虑的状态。有数据有内容，是用户熟悉的状态。<br />

6.极端状态<br>
类似名字，数字，地址过长等状态。（基本解决方法都是用省略号）<br />
最大值状态（一般解决方法为加号不可用等）<br />

7.正确状态<br>
理想状态.<br />

8.完成状态<br />



* <span class="article_subtitle">异常状态</span> <br>

1.错误状态<br>
类似服务器异常，系统异常，网络异常等错误状态，容易让用户产生挫败感，所以要亲和一点。<br />

2.失败状态<br>
用户疏忽导致的失败状态，例如停留时间太久失效状态等。这些要引导他重新操作<br />


{% assign maintitle = '限制' %}
{% include article_maintitle.html%}
1.范围：数据的取值范围。比如轮播图的个数、滑块的范围&刻度、文本域的长度等等.<br>
2.极限值：数据的显示限制。比如最多应该显示多少字数，超出时如何显示、每次请求数据的条数，不足时怎么办，超出时怎么办等等。<br>


{% assign maintitle = '常见操作' %}
{% include article_maintitle.html%}
1.常见操作：正常操作时得到的反馈状态。比如一个按钮经过不同操作会出现不同状态，鼠标进入、按下、点击后。<br>
2.特殊操作：一些极端情况下的操作。<br>
3.错误操作：用户操作错误的情况。这种情况采取的措施一般是提前预防错误、适当提示用户、系统自动纠错。比如库存接近0时，选择数量时就会提醒用户库存5件，如果用户输入超出5，则自动更正为5.<br>
4.手势操作：使用移动端产品时的操作方式。比如滑动、放大、摇晃等。<br>


{% assign maintitle = '反馈' %}
{% include article_maintitle.html%}
1.提示：用户操作后，系统反馈给用户的提示。<br>
2.跳转：点击某个链接/按钮后，页面跳转到的地方。网页也表明是原页面刷新还是新标签页打开，移动端要表明转场方式（默认为全局）。<br>
3.动画：用户操作后，系统通过动画的方式反馈给用户。动画给人的感觉比较友好，趣味性较强，避免过于夸张。比如Clear用炫酷的手势和动画赢得了用户的青睐。<br>
<br><br>
